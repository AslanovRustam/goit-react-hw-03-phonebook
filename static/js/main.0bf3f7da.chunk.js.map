{"version":3,"sources":["Filter/filter.module.css","Form/Form.js","Contacts/Contacts.js","Filter/Filter.js","App.js","reportWebVitals.js","index.js","Form/form.module.css","Contacts/contacs.module.css"],"names":["module","exports","Form","state","contacts","name","number","handleChange","event","setState","currentTarget","value","reset","handleSubmitForm","preventDefault","props","onSubmit","contactInputId","shortid","generate","className","s","form","this","input","type","onChange","id","button","Component","Contactlist","onDeleteContact","contactsList","length","list","map","item","onClick","Filter","section","App","filter","addContact","contact","contactId","prevState","onAddContact","console","log","toLocaleLowerCase","includes","alert","onChangeFilter","e","getFilteredContacts","normalizedFilter","toLowerCase","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bf3f7da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"filter_section__1ETyV\",\"input\":\"filter_input__BxZK7\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './form.module.css';\r\nimport shortid from 'shortid';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    contacts: [],\r\n    name: '',\r\n    number: '',\r\n  };\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ contacts: [], name: '', number: '' });\r\n  };\r\n  ///////////////////////////////\r\n  // contactMatching = () => {\r\n  //   if (\r\n  //     this.state.contacts\r\n  //       .reduce((acc, contact) => [...acc, contact.name], [])\r\n  //       .includes(this.state.name)\r\n  //   ) {\r\n  //     alert(`${this.state.name} is already in contacts`);\r\n  //     return true;\r\n  //   }\r\n  // };\r\n\r\n  // contactMatching = () => {\r\n  //   const { name } = this.state;\r\n  //   const { contacts } = this.props;\r\n  //   // const namesInPhonebook = contacts.reduce(\r\n  //   //   (acc, contact) => [...acc, contact.name],\r\n  //   //   [],\r\n  //   // );\r\n  //   const namesInPhonebook = this.state.contacts.find(\r\n  //     contact => contact.name === name,\r\n  //   );\r\n  //   if (namesInPhonebook) {\r\n  //     alert(`${name} is already in contacts`);\r\n  //     return true;\r\n  //   }\r\n  // };\r\n\r\n  handleSubmitForm = event => {\r\n    const { name, number } = this.state;\r\n\r\n    event.preventDefault();\r\n    // if (this.contactMatching()) {\r\n    //   return;\r\n    // }\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  contactInputId = shortid.generate();\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={s.form} onSubmit={this.handleSubmitForm}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.contactInputId}\r\n            ></input>\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"number\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </label>\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport s from './contacs.module.css';\r\n\r\nconst Contactlist = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div className={s.contactsList}>\r\n      <h2>Contacts</h2>\r\n      <span>Total number of contacts - {contacts.length}</span>\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={s.item} key={id}>\r\n            {name} {number}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n              className={s.button}\r\n            >\r\n              <span>Delete</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contactlist;\r\n","import React from 'react';\r\nimport s from './filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={s.section}>\r\n      <label>\r\n        Find Contacts by name\r\n        <input\r\n          type=\"text\"\r\n          className={s.input}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Form from './Form/Form';\nimport Contactlist from './Contacts/Contacts';\nimport Filter from './Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    // name: '',\n    // number: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  // onAddContact = (name, number) => {\n  //   console.log({ name, number });\n  //   const contact = {\n  //     id: shortid.generate(),\n  //     name: name,\n  //     number: number,\n  //   };\n  onAddContact = (name, number) => {\n    console.log({ name, number });\n    const contact = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n\n    const getContacts = this.state.contacts.map(contact =>\n      contact.name.toLocaleLowerCase(),\n    );\n\n    const isGetContactAlready = getContacts.includes(name.toLocaleLowerCase());\n\n    if (isGetContactAlready) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [contact, ...prevState.contacts],\n        };\n      });\n    }\n  };\n\n  onChangeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <>\n        <Form onSubmit={this.onAddContact} />\n        <Filter value={this.state.filter} onChange={this.onChangeFilter} />\n        <Contactlist\n          // contacts={this.state.contacts}\n          contacts={filteredContacts}\n          onDeleteContact={this.onDeleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__VigD-\",\"input\":\"form_input__3dXdb\",\"button\":\"form_button__3WR9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacs_list__1Y7O_\",\"item\":\"contacs_item__cpfhB\",\"contactsList\":\"contacs_contactsList__2fGTf\"};"],"sourceRoot":""}